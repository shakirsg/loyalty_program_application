name: Build & Distribute Android APK

on:
  push:
    branches:
      - develop
    tags:
      - 'v*'

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.6'
          channel: 'stable'

      # - name: Decode google-services.json
      #   run: |
      #     mkdir -p android/app
      #     echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" | base64 -d > android/app/google-services.json

      # - name: Extract version from Git tag (fallback to 0.1.0)
      #   id: versioning
      #   run: |
      #     TAG_NAME=$(git describe --tags --abbrev=0 || echo "v0.1.0")
      #     VERSION_NAME=${TAG_NAME#v}
      #     VERSION_CODE=${{ github.run_number }}
      #     echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
      #     echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
      #     echo "Using version: $VERSION_NAME+$VERSION_CODE"

      # - name: Inject version into pubspec.yaml
      #   run: |
      #     sed -i "s/^version: .*/version: $VERSION_NAME+$VERSION_CODE/" pubspec.yaml
      #     echo "Updated pubspec.yaml version:"
      #     grep version pubspec.yaml

      - name: Decode keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/key.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=key.jks" >> android/key.properties

      - name: Install dependencies
        run: flutter pub get

      - name: Run analyzer
        run: flutter analyze

      # - name: Run tests
      #   run: flutter test

      - name: Build APK
        run: flutter build apk --release

      - name: Rename APK with version
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/m-fundi.apk
        # run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-${{ env.VERSION_NAME }}.apk

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Upload to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/m-fundi.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --token ${{ secrets.FIREBASE_TOKEN }} \
            --groups testers
